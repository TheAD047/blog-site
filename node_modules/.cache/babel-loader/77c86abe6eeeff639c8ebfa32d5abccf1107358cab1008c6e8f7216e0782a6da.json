{"ast":null,"code":"import _slicedToArray from\"C:/javascript/blog-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useNavigate,useParams}from\"react-router-dom\";import{useEffect,useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BlogList=function BlogList(){var username=useParams();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),valid=_useState2[0],setValid=_useState2[1];var nav=useNavigate();useEffect(function(){fetch(\"/api/user/view/\".concat(username.id),{method:'GET',credentials:'include',headers:{'Content-Type':'application/json'}}).then(function(res){return res.json();}).then(function(data){console.log(data);setValid(true);}).catch(function(err){console.log(err);nav('/401');});},[]);console.log(valid);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" Blog list for user \",username.id,\" \"]}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"item\"}),/*#__PURE__*/_jsx(\"li\",{children:\"item\"}),/*#__PURE__*/_jsx(\"li\",{children:\"item\"}),/*#__PURE__*/_jsx(\"li\",{children:\"item\"})]})]});};export default BlogList;","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","BlogList","username","_useState","_useState2","_slicedToArray","valid","setValid","nav","fetch","concat","id","method","credentials","headers","then","res","json","data","console","log","catch","err","children"],"sources":["C:/javascript/blog-site/src/Components/BlogList.jsx"],"sourcesContent":["import {useNavigate, useParams} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst BlogList = () => {\r\n    const username = useParams();\r\n    const [valid, setValid] = useState(false)\r\n    const nav = useNavigate()\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/user/view/${username.id}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setValid(true)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                nav('/401')\r\n            })\r\n    }, [])\r\n\r\n    console.log(valid)\r\n\r\n    return <>\r\n        <h1> Blog list for user {username.id} </h1>\r\n        <ol>\r\n            <li>item</li>\r\n            <li>item</li>\r\n            <li>item</li>\r\n            <li>item</li>\r\n        </ol>\r\n    </>\r\n}\r\n\r\nexport default BlogList;"],"mappings":"6GAAA,OAAQA,WAAW,CAAEC,SAAS,KAAO,kBAAkB,CACvD,OAAQC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE1C,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACnB,GAAM,CAAAC,QAAQ,CAAGV,SAAS,CAAC,CAAC,CAC5B,IAAAW,SAAA,CAA0BT,QAAQ,CAAC,KAAK,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,GAAM,CAAAI,GAAG,CAAGjB,WAAW,CAAC,CAAC,CAEzBE,SAAS,CAAC,UAAM,CACZgB,KAAK,mBAAAC,MAAA,CAAmBR,QAAQ,CAACS,EAAE,EAAI,CACnCC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACGC,IAAI,CAAC,SAAAC,GAAG,QAAI,CAAAA,GAAG,CAACC,IAAI,CAAC,CAAC,GAAC,CACvBF,IAAI,CAAC,SAAAG,IAAI,CAAI,CACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CACjBX,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAC,CACDc,KAAK,CAAC,SAACC,GAAG,CAAK,CACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAChBd,GAAG,CAAC,MAAM,CAAC,CACf,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAENW,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC,CAElB,mBAAOV,KAAA,CAAAI,SAAA,EAAAuB,QAAA,eACH3B,KAAA,OAAA2B,QAAA,EAAI,sBAAoB,CAACrB,QAAQ,CAACS,EAAE,CAAC,GAAC,EAAI,CAAC,cAC3Cf,KAAA,OAAA2B,QAAA,eACIzB,IAAA,OAAAyB,QAAA,CAAI,MAAI,CAAI,CAAC,cACbzB,IAAA,OAAAyB,QAAA,CAAI,MAAI,CAAI,CAAC,cACbzB,IAAA,OAAAyB,QAAA,CAAI,MAAI,CAAI,CAAC,cACbzB,IAAA,OAAAyB,QAAA,CAAI,MAAI,CAAI,CAAC,EACb,CAAC,EACP,CAAC,CACP,CAAC,CAED,cAAe,CAAAtB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}